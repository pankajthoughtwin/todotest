"use strict";(()=>{var e={};e.id=603,e.ids=[603],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},36:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var o={};r.r(o),r.d(o,{GET:()=>u,POST:()=>p});var s=r(3278),i=r(5002),n=r(4877),a=r(1309),d=r(1643);async function u(){try{let e=await d._.todo.findMany({orderBy:{createdAt:"desc"}});return a.NextResponse.json(e)}catch(e){return console.error("Error fetching todos:",e),a.NextResponse.json({error:"Failed to fetch todos"},{status:500})}}async function p(e){try{let t=await e.json();if(!t.title?.trim())return a.NextResponse.json({error:"Title is required"},{status:400});let r=await d._.todo.create({data:{title:t.title.trim(),description:t.description?.trim()||null,priority:t.priority||"MEDIUM"}});return a.NextResponse.json(r,{status:201})}catch(e){return console.error("Error creating todo:",e),a.NextResponse.json({error:"Failed to create todo"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/todos/route",pathname:"/api/todos",filename:"route",bundlePath:"app/api/todos/route"},resolvedPagePath:"/home/hp/Documents/todotest/app/api/todos/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h}=c,x="/api/todos/route";function f(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},1643:(e,t,r)=>{r.d(t,{_:()=>s});let o=require("@prisma/client"),s=globalThis.prisma??new o.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[379,833],()=>r(36));module.exports=o})();